define("tiny_codehighlighter/ui",["exports","core/modal_factory","core/modal_events","./modal"],(function(_exports,_modal_factory,_modal_events,_modal){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * CodeHighlighter for TinyMCE.
   *
   * @module      tiny_codehighlighter/ui
   * @copyright   2023 Nov <m.kowalski.nov7@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.handleAction=void 0,_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events),_modal=_interopRequireDefault(_modal);_exports.handleAction=editor=>{displayDialogue(editor)};const displayDialogue=async editor=>{const modalPromises=await _modal_factory.default.create({type:_modal.default.TYPE,templateContext:getTemplateContext(editor,{}),large:!0});modalPromises.show();(await modalPromises.getRoot()).on(_modal_events.default.hidden,(()=>{modalPromises.destroy()}));let btn=document.getElementById("save_tiny_codehighlighter"),lan=document.getElementById("id_content_editor_tiny_codehihlighter_langugage");btn.addEventListener("click",(()=>{let splitted=document.getElementById("id_content_editor_tiny_codehighlighter").value.split(/\r?\n/),lineNumbers="",codeLines="",lineNumer=1,content="";var e;content+='<div class="codehl chLang_'+lan.value+' chParser_JS">',content+='<table class="normal mce-item-table"><thead><tr><th colspan="2"><span class="title"></span>',content+='<span class="language">CodeHL 3.0 [pre-alpha] <b>['+(-1===(e=lan).selectedIndex?null:e.options[e.selectedIndex].text),content+="]</b></span></th></tr></thead><tbody><tr><td>",window.console.log("Language "+lan.value);for(let el in splitted)lineNumbers+="<pre>"+lineNumer+++"</pre>",codeLines+="<pre>"+splitted[el]+"</pre>";content+=lineNumbers,content+="</td><td>",content+=codeLines,content+="</td></tr></tbody></table></div></div>",editor.insertContent(content)}))},getTemplateContext=(editor,data)=>Object.assign({},{elementid:editor.id},data)}));

//# sourceMappingURL=ui.min.js.map