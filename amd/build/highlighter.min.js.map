{"version":3,"file":"highlighter.min.js","sources":["../src/highlighter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Equation helper for Tiny Equation plugin.\n *\n * @module      tiny_equation/codehighlighter\n * @copyright   2023 Nov7 <m.kowalski.nov7@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Handle insertion of a new equation, or update of an existing one.\n * @param {TinyMCE} editor\n */\nexport const insertCode = (editor) => {\n    const item = document.getElementById('id_content_editor_tiny_codehighlighter');\n    let lan = document.getElementById('id_content_editor_tiny_codehihlighter_langugage');\n    const getSelectedText = (e) => {\n        if (e.selectedIndex === -1) {return null;}\n        return e.options[e.selectedIndex].text;\n    };\n\n    let splitted = item.value.split(/\\r?\\n/);\n    let lineNumbers = \"\", codeLines = \"\";\n    let lineNumer = 1;\n    let content = \"\";\n    // content += '<div class=\"codehl\">';\n    content += '<div class=\"codehl chLang_'+lan.value+' chParser_JS\">';// style=\"width: 95%;\"';// data-language=\"cpp\" ';\n    // content += 'data-parser=\"JS\" data-mce-style=\"width: 95%;\">';\n    content += '<table class=\"normal mce-item-table\"><thead><tr><th colspan=\"2\"><span class=\"title\"></span>';\n    content += '<span class=\"language\">CodeHL 3.0 [pre-alpha] <b>['+getSelectedText(lan);\n    content +=']</b></span></th></tr></thead><tbody><tr><td>';\n\n    window.console.log(\"Language \"+lan.value);\n\n    for(let el in splitted)\n    {\n        lineNumbers += \"<pre>\"+(lineNumer++)+\"</pre>\";\n        codeLines += \"<pre>\"+splitted[el]+\"</pre>\";\n    }\n    content += lineNumbers;\n    content += '</td><td>';\n    content += codeLines;\n    content += '</td></tr></tbody></table></div></div>';\n\n    editor.insertContent(content);\n};\n\n\n/**\n * Get selected Code.\n * @param {TinyMCE} editor\n * @returns {string}\n */\nexport const getSelectedCode = (editor) => {\n    // const currentSelection = editor.selection.getSel();\n    let node = editor.selection.getNode();\n\n    while(node && node.nodeName != \"TD\")\n    {\n        node = node.parentElement;\n        window.console.log(node.nodeName);\n    }\n\n    // window.console.log(node.innerText);\n\n    return node.innerText;\n};\n"],"names":["editor","item","document","getElementById","lan","splitted","value","split","lineNumbers","codeLines","lineNumer","content","e","selectedIndex","options","text","window","console","log","el","insertContent","node","selection","getNode","nodeName","parentElement","innerText"],"mappings":"0MA2B2BA,eACjBC,KAAOC,SAASC,eAAe,8CACjCC,IAAMF,SAASC,eAAe,uDAM9BE,SAAWJ,KAAKK,MAAMC,MAAM,SAC5BC,YAAc,GAAIC,UAAY,GAC9BC,UAAY,EACZC,QAAU,GARWC,IAAAA,EAUzBD,SAAW,6BAA6BP,IAAIE,MAAM,iBAElDK,SAAW,8FACXA,SAAW,uDAZkB,KADJC,EAauDR,KAZtES,cAA8B,KAC7BD,EAAEE,QAAQF,EAAEC,eAAeE,MAYtCJ,SAAU,gDAEVK,OAAOC,QAAQC,IAAI,YAAYd,IAAIE,WAE/B,IAAIa,MAAMd,SAEVG,aAAe,QAASE,YAAa,SACrCD,WAAa,QAAQJ,SAASc,IAAI,SAEtCR,SAAWH,YACXG,SAAW,YACXA,SAAWF,UACXE,SAAW,yCAEXX,OAAOoB,cAAcT,mCASOX,aAExBqB,KAAOrB,OAAOsB,UAAUC,eAEtBF,MAAyB,MAAjBA,KAAKG,UAEfH,KAAOA,KAAKI,cACZT,OAAOC,QAAQC,IAAIG,KAAKG,iBAKrBH,KAAKK"}