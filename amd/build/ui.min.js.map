{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * CodeHighlighter for TinyMCE.\n *\n * @module      tiny_codehighlighter/ui\n * @copyright   2023 Nov <m.kowalski.nov7@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport LinkModal from './modal';\nimport {insertCode,getSelectedCode} from './highlighter';\n\n// import {debounce} from 'core/utils';\n\n/**\n * Handle action.\n *\n * @param {TinyMCE} editor\n */\n\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\n/**\n * displayDialogue.\n *\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor) => {\n    let data = {};\n    const modalPromises = await ModalFactory.create({\n        type: LinkModal.TYPE,\n        templateContext: getTemplateContext(editor,data),\n        large: true,\n    });\n\n    modalPromises.show();\n    const $root = await modalPromises.getRoot();\n\n    const item = document.getElementById('id_content_editor_tiny_codehighlighter');\n\n    item.value = getSelectedCode(editor);\n\n    $root.on(ModalEvents.hidden, () => {\n        modalPromises.destroy();\n    });\n\n\n    let btn = document.getElementById('save_tiny_codehighlighter');\n    btn.addEventListener('click', () => {\n        insertCode(editor);\n    });\n};\n\n/**\n * getTemplateContext.\n *\n * @param {TinyMCE} editor\n * @param {Object} data\n * @returns {Object}\n */\n\nconst getTemplateContext = (editor,data) => {\n\n    return Object.assign({}, {\n        elementid: editor.id,\n    }, data);\n};\n"],"names":["editor","displayDialogue","async","modalPromises","ModalFactory","create","type","LinkModal","TYPE","templateContext","getTemplateContext","large","show","$root","getRoot","document","getElementById","value","on","ModalEvents","hidden","destroy","addEventListener","data","Object","assign","elementid","id"],"mappings":";;;;;;;gQAoC6BA,SACzBC,gBAAgBD,eASdC,gBAAkBC,MAAAA,eAEdC,oBAAsBC,uBAAaC,OAAO,CAC5CC,KAAMC,eAAUC,KAChBC,gBAAiBC,mBAAmBV,OAH7B,IAIPW,OAAO,IAGXR,cAAcS,aACRC,YAAcV,cAAcW,UAErBC,SAASC,eAAe,0CAEhCC,OAAQ,gCAAgBjB,QAE7Ba,MAAMK,GAAGC,sBAAYC,QAAQ,KACzBjB,cAAckB,aAIRN,SAASC,eAAe,6BAC9BM,iBAAiB,SAAS,iCACftB,YAYbU,mBAAqB,CAACV,OAAOuB,OAExBC,OAAOC,OAAO,GAAI,CACrBC,UAAW1B,OAAO2B,IACnBJ"}