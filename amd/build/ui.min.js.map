{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * CodeHighlighter for TinyMCE.\n *\n * @module      tiny_codehighlighter/ui\n * @copyright   2023 Nov <m.kowalski.nov7@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport LinkModal from './modal';\n// import {debounce} from 'core/utils';\n\n/**\n * Handle action.\n *\n * @param {TinyMCE} editor\n */\n\nexport const handleAction = (editor) => {\n    displayDialogue(editor);\n};\n\n/**\n * displayDialogue.\n *\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor) => {\n    let data = {};\n    const modalPromises = await ModalFactory.create({\n        type: LinkModal.TYPE,\n        templateContext: getTemplateContext(editor,data),\n        large: true,\n    });\n\n    modalPromises.show();\n    const $root = await modalPromises.getRoot();\n\n    $root.on(ModalEvents.hidden, () => {\n        modalPromises.destroy();\n    });\n\n\n    let btn = document.getElementById('save_tiny_codehighlighter');\n    let lan = document.getElementById('id_content_editor_tiny_codehihlighter_langugage');\n    btn.addEventListener('click', () => {\n        const item = document.getElementById('id_content_editor_tiny_codehighlighter');\n\n        const getSelectedText = (e) => {\n            if (e.selectedIndex === -1) {return null;}\n            return e.options[e.selectedIndex].text;\n        };\n\n        let splitted = item.value.split(/\\r?\\n/);\n        let lineNumbers = \"\", codeLines = \"\";\n        let lineNumer = 1;\n        let content = \"\";\n        // content += '<div class=\"codehl\">';\n        content += '<div class=\"codehl chLang_'+lan.value+' chParser_JS\">';// style=\"width: 95%;\"';// data-language=\"cpp\" ';\n        // content += 'data-parser=\"JS\" data-mce-style=\"width: 95%;\">';\n        content += '<table class=\"normal mce-item-table\"><thead><tr><th colspan=\"2\"><span class=\"title\"></span>';\n        content += '<span class=\"language\">CodeHL 3.0 [pre-alpha] <b>['+getSelectedText(lan);\n        content +=']</b></span></th></tr></thead><tbody><tr><td>';\n\n        window.console.log(\"Language \"+lan.value);\n\n        for(let el in splitted)\n        {\n            lineNumbers += \"<pre>\"+(lineNumer++)+\"</pre>\";\n            codeLines += \"<pre>\"+splitted[el]+\"</pre>\";\n        }\n        content += lineNumbers;\n        content += '</td><td>';\n        content += codeLines;\n        content += '</td></tr></tbody></table></div></div>';\n\n        editor.insertContent(content);\n    });\n};\n\n/**\n * getTemplateContext.\n *\n * @param {TinyMCE} editor\n * @param {Object} data\n * @returns {Object}\n */\n\nconst getTemplateContext = (editor,data) => {\n\n    return Object.assign({}, {\n        elementid: editor.id,\n    }, data);\n};\n"],"names":["editor","displayDialogue","async","modalPromises","ModalFactory","create","type","LinkModal","TYPE","templateContext","getTemplateContext","large","show","getRoot","on","ModalEvents","hidden","destroy","btn","document","getElementById","lan","addEventListener","splitted","value","split","lineNumbers","codeLines","lineNumer","content","e","selectedIndex","options","text","window","console","log","el","insertContent","data","Object","assign","elementid","id"],"mappings":";;;;;;;gQAkC6BA,SACzBC,gBAAgBD,eASdC,gBAAkBC,MAAAA,eAEdC,oBAAsBC,uBAAaC,OAAO,CAC5CC,KAAMC,eAAUC,KAChBC,gBAAiBC,mBAAmBV,OAH7B,IAIPW,OAAO,IAGXR,cAAcS,cACMT,cAAcU,WAE5BC,GAAGC,sBAAYC,QAAQ,KACzBb,cAAcc,iBAIdC,IAAMC,SAASC,eAAe,6BAC9BC,IAAMF,SAASC,eAAe,mDAClCF,IAAII,iBAAiB,SAAS,SAQtBC,SAPSJ,SAASC,eAAe,0CAOjBI,MAAMC,MAAM,SAC5BC,YAAc,GAAIC,UAAY,GAC9BC,UAAY,EACZC,QAAU,GARWC,IAAAA,EAUzBD,SAAW,6BAA6BR,IAAIG,MAAM,iBAElDK,SAAW,8FACXA,SAAW,uDAZkB,KADJC,EAauDT,KAZtEU,cAA8B,KAC7BD,EAAEE,QAAQF,EAAEC,eAAeE,MAYtCJ,SAAU,gDAEVK,OAAOC,QAAQC,IAAI,YAAYf,IAAIG,WAE/B,IAAIa,MAAMd,SAEVG,aAAe,QAASE,YAAa,SACrCD,WAAa,QAAQJ,SAASc,IAAI,SAEtCR,SAAWH,YACXG,SAAW,YACXA,SAAWF,UACXE,SAAW,yCAEX7B,OAAOsC,cAAcT,aAYvBnB,mBAAqB,CAACV,OAAOuC,OAExBC,OAAOC,OAAO,GAAI,CACrBC,UAAW1C,OAAO2C,IACnBJ"}